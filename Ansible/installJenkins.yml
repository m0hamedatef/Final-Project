---
- hosts: all  # Replace with your target host(s)
  become: true

  tasks:
    # Install Java
    - name: Install Java OpenJDK
      apt:
        name: openjdk-11-jre
        update_cache: yes
        state: present

    # Add Jenkins repository key
    - name: Add Jenkins repository key
      apt_key:
        url: https://pkg.jenkins.io/debian/jenkins.io-2023.key
        state: present

    # Add Jenkins repository
    - name: Add Jenkins repository
      apt_repository:
        repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
        state: present

    # Update package lists
    - name: Update apt cache
      apt:
        update_cache: yes
        state: present

    # Install Jenkins
    - name: Install Jenkins
      apt:
        name: jenkins
        state: present

    # Start Jenkins service and enable on boot
    - name: Start and enable Jenkins service
      systemd:
        name: jenkins
        enabled: yes
        state: started

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Add user to Docker group
      user:
        name: jenkins
        groups: docker
        append: yes

    - name: Ensure Docker is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install dependencies
      apt:
        name:
          - unzip
          - curl
        state: present

    - name: Download AWS CLI
      get_url:
        url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        dest: "/tmp/awscliv2.zip"

    - name: Unzip AWS CLI package
      unarchive:
        src: "/tmp/awscliv2.zip"
        dest: "/tmp"
        remote_src: yes

    - name: Install or Update AWS CLI
      command: "/tmp/aws/install --update"

    - name: Get the stable kubectl version
      shell: "curl -sL https://dl.k8s.io/release/stable.txt"
      register: kubectl_version
      changed_when: false
      failed_when: kubectl_version.stdout is undefined or kubectl_version.stdout == '' or kubectl_version.stdout | regex_search('html')

    - name: Debug kubectl version
      debug:
        msg: "kubectl version: {{ kubectl_version.stdout }}"

    - name: Download kubectl binary
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.stdout }}/bin/linux/amd64/kubectl"
        dest: /tmp/kubectl
        mode: '0755'
      when: kubectl_version.stdout is defined and kubectl_version.stdout != '' and not kubectl_version.stdout | regex_search('html')

    - name: Download kubectl checksum
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.stdout }}/bin/linux/amd64/kubectl.sha256"
        dest: /tmp/kubectl.sha256
        mode: '0644'
      when: kubectl_version.stdout is defined and kubectl_version.stdout != '' and not kubectl_version.stdout | regex_search('html')

    - name: Verify kubectl binary
      shell: |
        echo "$(cat /tmp/kubectl.sha256)  /tmp/kubectl" | sha256sum --check
      register: kubectl_checksum
      when: kubectl_version.stdout is defined and kubectl_version.stdout != '' and not kubectl_version.stdout | regex_search('html')

    - name: Install kubectl
      become: true
      copy:
        src: /tmp/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'
        remote_src: yes
      when: kubectl_checksum.rc == 0

    - name: Verify kubectl version
      command: kubectl version --client
      register: kubectl_version_check
      changed_when: false

    - debug:
        msg: "kubectl version: {{ kubectl_version_check.stdout }}"
